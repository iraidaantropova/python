# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list1=[2, 3.4, 'hello', None]
print(my_list1)
for el in my_list1 :
    print(type(el))


#2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input()

my_list2 = list(input('Введите последовательность чисел без пробела:'))

print(my_list2)
print(type(my_list2))

for i in range(0, len(my_list2)-1, 2):
    my_list2[i], my_list2[i+1] = my_list2[i+1], my_list2[i]

print(my_list2)

#3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). Напишите решения через list и dict

month = int(input('Введите число от 1 до 12: '))

months = [
 'Зима',
 'Весна',
 'Лето',
 'Осень']

if month == 1 or month == 2 or month == 12:
    print('Время года -', months[0])
elif month == 3 or month == 4 or month == 5:
    print('Время года -', months[1])
elif month == 6 or month == 7 or month == 8:
    print('Время года -', months[2])
elif month == 9 or month == 10 or month == 11:
    print('Время года -', months[3])
else:
    print('Некорректный номер месяца!')

month2 = int(input('Введите число от 1 до 12: '))

MonthDict= {
       12: "Зима",
       1: "Зима",
       2: "Зима",
       3 : "Весна",
       4 : "Весна",
       5 : "Весна",
       6 : "Лето",
       7 : "Лето",
       8 : "Лето",
       9 : "Осень",
       10 : "Осень",
       11 : "Осень"
}

print ('Время года -', MonthDict[month2])

# # 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# # Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.

stroka = input('Введите несколько слов через пробел: ').split()
for ind, el in enumerate(stroka, 1):
    if len(el)>=10:
        print(ind, el[0:10])
    else:
        print(ind, el[:])

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

rating = [7, 5, 3, 3, 2]
print(f"Рейтинг - {rating}")
new_el = int(input("Введите новый элемент рейтинга: "))

for el in range(len(rating)):
        if rating[el] == new_el:
            rating.insert(el + 1, new_el)
            break
        elif rating[0] < new_el:
            rating.insert(0, new_el)
        elif rating[-1] > new_el:
            rating.append(new_el)
        elif rating[el] > new_el and rating[el + 1] < new_el:
            rating.insert(el + 1, new_el)

print(f"текущий рейтинг: {rating}")
