#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль
def del_num(number1, number2):
    try:
        return number1 / number2
    except ZeroDivisionError:
        print('деление на 0 невозможно!')


print(del_num(int(input('Введите 1е число: ')), int(input('Введите 2е число: '))))


#2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой

def data_person (name, surname,birth_year, city, email,telephone_number):
    return print(f'Имя - {name},'f'фамилия - {surname},'f'год рождения-{birth_year},' f'город проживания - {city},' f'электронная почта-{email:},'f'телефон-{telephone_number}')
data_person (name=input('введите свое имя'), surname=input('Назовите свою фамилию: '),birth_year = input('Год вашего рождения: '), city = input('Город проживания: '), email= input('email: '),telephone_number=input('Номер телефона: ') )

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.

def my_func(arg_1, arg_2, arg_3):
    return print('Сумма двух наибольших аргументов равна:',((arg_1 + arg_2 + arg_3) -(min(arg_1, arg_2, arg_3))))
my_func(int(input('Введите 1е число: ')),int(input('Введите 2е число: ')),int(input('Введите 3е число: ')))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x,y):
    return (x**y)
print ("Возведение в степень 1 способом:", my_func((abs(float(input('Введите действительное положительное число: ')))),(float(input('Введите целое отрицательное число: ')))))

def my_func(x,y):
    res=1
    for i in range(abs(y)):
        res *=x
    if y>=0:
         return (res)
    else:
         return (1/res)
print ("Возведение в степень 2 способом:", my_func((float(input('Введите действительное положительное число: '))),(int(input('Введите целое отрицательное число: ')))))

# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def calculate_sum(*nums):
    sum = 0
    flag = False
    for num in nums:
        try:
            if num:
                sum += float(num)
        except ValueError:
            flag = True
    return sum, flag

general_sum = 0

while True:
    numbers_string = input('Введите строку чисел через пробел: ').split(' ')
    sum, stop_flag = calculate_sum(*numbers_string)
    general_sum += sum
    print(f'сумма {general_sum}')

    if stop_flag:
        break

#6.Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#7 Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func()

def int_func(stroka):
    res = []
    flag = True
    for s in stroka.lower():
        if s.isalpha():
            if flag:
                flag = False
                s = s.upper()
        else:
            flag = True
        res.append(s)
    return ''.join(res)

print(int_func(str(input("Введите строку из слов в нижнем регистре, разделённых пробелом: "))))
